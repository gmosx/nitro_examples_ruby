
# this is where you define your backend clusters. 

upstream example_cluster {
    server 127.0.0.1:9000;
    # server 127.0.0.1:9001;
    # server 127.0.0.1:9002;
}

# the server directive is nginx's virtual host directive.

server {
    # port to listen on. Can also be set to an IP:PORT
    listen 80;

    # Set the max size for file uploads to 50Mb
    client_max_body_size 50M;

    # sets the domain[s] that this vhost server requests for
    server_name www.app.com app.com;

    # doc root
    root /home/gmosx/c/nitro/example/public;

    # vhost specific access log
    # access_log /var/log/nginx.vhost.access.log main;
    # rewrite_log on;

    # this rewrites all the requests to the maintenance.html
    # page if it exists in the doc root. This is for capistrano's
    # disable web task
    # if (-f $document_root/system/maintenance.html) {
    #    rewrite ^(.*)$ /system/maintenance.html last;
    #    break;
    # }

    location / {
        # forward user's IP address to the upstream servers. 
        proxy_set_header X-Real-IP $remote_addr;

        # needed for HTTPS?
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect false;
        proxy_max_temp_file_size 0;
        
        # rewrite dirs to index.
        rewrite ^(.*)/$ $1/index.html;
  
        # If the file exists as a static file serve it directly without
        # running all the other rewite tests on it
        if (-f $request_filename) { 
            break; 
        }

        # check for index.html for directory index
        # if its there on the filesystem then rewite 
        # the url to add /index.html to the end of it
        # and then break to send it to the next config rules.
        # FIXME: localhost://index.html
        if (-f $request_filename/index.html) {
            rewrite (.*) $1/index.html;
            break;
        } 

        # add .html to the end of the url and then check
        # the filesystem for that file. If it exists, 
        # rewite the url to have explicit .html on the end 
        # and then send it on its way to the next config rule.
        # if there is no file on the fs then it sets all the 
        # necessary headers and proxies to the upstream servers.
        if (-f $request_filename.html) {
            rewrite (.*) $1.html;
            break;
        }

        if (!-f $request_filename) {
            proxy_pass http://example_cluster;
            break;
        }
    }

    error_page 500 502 503 504 /500.html;
    
    location = /500.html {
        root /home/gmosx/c/nitro/example/public;
    }
}
